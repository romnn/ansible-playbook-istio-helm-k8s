- name: Determine host architecture
  shell: dpkg --print-architecture
  register: host_arch
  changed_when: false

- name: Add an apt signing key for kubernetes
  apt_key:
    url: https://packages.cloud.google.com/apt/doc/apt-key.gpg
    keyring: /usr/share/keyrings/k8s-keyring.gpg
    state: present

- name: Adding stable apt repository for kubernetes
  apt_repository:
    repo: "deb [arch={{host_arch.stdout}}, signed-by=/usr/share/keyrings/k8s-keyring.gpg] https://apt.kubernetes.io/ kubernetes-xenial main"
    state: present
    filename: kubernetes.list

- name: Install Kubernetes binaries
  apt:
    name:
      - kubelet
      - kubeadm
      - kubectl
      - kubernetes-cni
      - kubetail
    state: present
    update_cache: true

- name: Creating kubelet config file
  file:
    path: /etc/default/kubelet
    state: touch
    modification_time: preserve
    access_time: preserve

- name: Ensure kubelet extra args environment variable is set
  lineinfile:
    path: /etc/default/kubelet
    regexp: '^KUBELET_EXTRA_ARGS.*'
    line: 'KUBELET_EXTRA_ARGS="--node-ip={{ node_ip | default(ansible_default_ipv4.address) }}"'
  register: kubelet_config

- name: Reload systemd kubernetes daemon if config was changed
  systemd:
    name: kubelet
    daemon_reload: true
  when: kubelet_config is changed

- name: Ensure kubelet is started and enabled at boot.
  service:
    name: kubelet
    state: started
    enabled: true

- name: Check if kubernetes has already been initialized
  become_user: "{{service_user}}"
  # become: true
  # command: "kubectl --kubeconfig /home/{{service_user}}/.kube/config cluster-info"
  command: "kubectl cluster-info"
  register: kubernetes_already_initialized
  ignore_errors: true
